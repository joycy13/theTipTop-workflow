version: '3'
networks: 
  private:
    name: private
  web:
    name: web
  
  
    
services:
  traefik:
    container_name: traefik
    restart: always
    image: traefik:v2.4.2
    ports:
      - 443:443
      - 80:80
    command:
      - --api=true
      - --api.dashboard=true
      - "--log.level=INFO"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - --providers.docker.watch=true
      - --providers.docker.network=web
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      #### https ####
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.lets-encr.acme.httpchallenge=true
      - --certificatesresolvers.lets-encr.acme.email=bouskilayehouda+acme@gmail.com
      - --certificatesresolvers.lets-encr.acme.storage=acme.json
      - --certificatesresolvers.lets-encr.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.lets-encr.acme.httpchallenge=true
      
    labels:
      - traefik.enable=true
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - traefik.http.routers.traefik.rule=Host(`traefik.dsp4-5archio19-ah-je-gh-yb.fr`)
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      - "traefik.http.routers.traefik.tls.certresolver=lets-encr"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./acme.json:/acme.json
    networks: 
      - web
    extra_hosts:
      - "gogs.dsp4-5archio19-ah-je-gh-yb.fr:51.159.28.65"
      - "traefik.dsp4-5archio19-ah-je-gh-yb.fr:51.159.28.65"
      - "jenkins.dsp4-5archio19-ah-je-gh-yb.fr:51.159.28.65"
      - "pma.dsp4-5archio19-ah-je-gh-yb.fr:51.159.28.65"
      - "dsp4-5archio19-ah-je-gh-yb.fr:51.159.28.65"
      - "nexus.dsp4-5archio19-ah-je-gh-yb.fr:51.159.28.65"
  gogs-db:
    image: postgres:13-alpine
    container_name: gogs-db
    volumes: 
      - ./data/gogs/postgres:/var/lib/postgresql/data
    networks: 
      - private
    environment: 
      - POSTGRES_DB=gogs
      - POSTGRES_USER=gogs
      - POSTGRES_PASSWORD=gogs
    restart: always

    
#---------------------
# gogs
#---------------------  
  gogs:
    image: gogs/gogs:latest
    restart: always
    container_name: gogs
    ports:
      - 2222:2222
    networks: 
      - private
      - web
    volumes:
      - ./data/gogs/data:/data
    labels:
      - traefik.enable=true
      - "traefik.http.routers.gogs.entrypoints=websecure"
      - traefik.http.routers.gogs.rule=Host(`gogs.dsp4-5archio19-ah-je-gh-yb.fr`)
      - traefik.http.services.gogs.loadbalancer.server.port=3000
      - "traefik.http.routers.gogs.tls.certresolver=lets-encr"


#---------------------
# jenkins 
#---------------------

  jenkins:
    build:
      context: .
      dockerfile: jenkins.Dockerfile
    container_name: jenkins
    volumes:
      - ./data/jenkins/jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - $PWD:/app
    user: 0:0
    networks: 
      - private
      - web
    labels:
      - traefik.enable=true
      - "traefik.http.routers.jenkins.entrypoints=websecure"
      - traefik.http.routers.jenkins.rule=Host(`jenkins.dsp4-5archio19-ah-je-gh-yb.fr`)
      - traefik.http.services.jenkins.loadbalancer.server.port=8080
      - "traefik.http.routers.jenkins.tls.certresolver=lets-encr"
      
      
#---------------------
# nexus 
#---------------------
  nexus:
    image: sonatype/nexus3
    networks:
      - private
      - web
    container_name: nexus
    volumes:
      - ./data/nexus-data:/nexus-data
    user: 0:0
    ports:
      - "8081"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.nexus.entrypoints=websecure"
      - traefik.http.routers.nexus.rule=Host(`nexus.dsp4-5archio19-ah-je-gh-yb.fr`)
      - "traefik.http.routers.nexus.tls.certresolver=lets-encr"      

